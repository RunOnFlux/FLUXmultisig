{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///src/App.vue","webpack:///./src/App.vue","webpack:///./src/App.vue?60d0","webpack:///./src/App.vue?315a","webpack:///./src/main.js","webpack:///./src/App.vue?327a"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","bitgotx","axios","utxosUsedInCurrentTransaction","keypair","publickey","privatekey","multisig","address","redeemScript","txinfo","txinfoList","publickeys","inputs","reqsig","nTxLoopCount","unsignedTx","myAddress","receiver","amount","fee","message","hex","unsignedTxList","signedTx","rawtx","finalisedTx","submitedTx","coincontrol","utxos","selected","errorMsg","currentPage","elementsPerPage","getrows","numpages","show","selectedValueSats","selectedValueAmount","avoidFluxNodeAmounts","sendAllFlux","isTestnet","chain","isTitan","multipleTxes","createCollateralTx","fillHotWalletFromDesposit","fillHotWalletWithRewards","decodeRawHex","decodedInfo","balanceSpent","count","outputs","decodedInfoString","mainnetExplorer","testnetExplorer","bitcoinBlockbook","testnetBitcoinBlockbook","methods","getNetwork","network","generateKeypair","generateMultisig","console","addPubKey","num_pages","get_rows","change_page","checkboxClicked","createCollateralTxCheckboxClicked","generateMultiTxesCheckboxClicked","fillHotWalletFromDepositCheckboxClicked","fillHotWalletWithRewardsCheckboxClicked","txid","vout","scriptPubKey","satoshis","confirmations","coinbase","history","satoshisSoFar","recipients","selectedCoins","usedUtxos","txb","destination","change","hexstring","method","url","headers","vin","out","item","txs","allowhighfees","index","quickLoad","tx","addr","signedTxs","finaliseTransaction","finalizedTxs","getValueHexBuffer","updateTitanNodeMessage","render","_vm","this","_c","_self","attrs","on","$event","_v","_s","_l","directives","rawName","expression","staticClass","domProps","target","composing","$set","fetchUtxoSet","_m","Array","isArray","_i","$$a","$$el","$$c","checked","$$v","$$i","concat","class","_e","style","display","staticStyle","buildUnsignedRawTx","id","decodeRawTransaction","signTransaction","submitTransaction","staticRenderFns","component","Vue","config","productionTip","h","App","$mount"],"mappings":"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AEAC,kBACAC,UACAC,SACAnB,cACAG,gBACAa,QAEAI,aACAD,SACAH,QAEAK,YACAF,SACAH,QAEAM,aACApB,WACAqB,SACAC,YACAC,YACAC,cACAC,mBACAC,UACAC,WACAC,QACAC,oBACAC,uBAEAC,wBACAC,eACAC,aACAC,aACAC,WACAC,gBACAC,sBACAC,6BACAC,4BACAC,gBACAC,aACApC,QACAqC,eACAC,SAEAC,YAEAC,qBACAC,gDACAC,+CACAC,6DACAC,6EAGAC,SACAC,aACA,yBAUA,MATA,uCAEA,uCACAC,qBACA,oCAEA,sCACAA,0BAFAA,qBAJAA,qBAQA,GAEAC,kBACA,0BACA,uBAAAD,YACA,yCAEA,yBACA,mCAEAE,mBACA,IACA,+DAEA,iCAEA,wBACA,+DACA,oBACA,yDAEA,oBACA,kCACA,wBACA,iCACA,CACA,+DACA,oBACA,2CACA7D,oBAEA,oBACA,kCACA,wBACA,8BAEA,SACA8D,eACA,gCACA,uCAGAC,YACA,gBAEAC,YACA,qGAEAC,WACA,0EACA,qCAEA,4DAEAC,eACA,+BACA,iBAEAC,qBACA,EACA,uEAEA,uEAEA,iGAEAC,qCACA,GACA,6BACA,kCACA,iCACA,oBACA,gEACA,+DACA,6BAEA,6BACA,4BACA,2BAGAC,oCACA,IACA,sBAGAC,2CACA,GACA,6BACA,2BACA,iCACA,gEACA,+DACA,2BAEA,6BACA,4BACA,2BAGAC,2CACA,GACA,6BACA,2BACA,kCACA,gEACA,+DACA,2BAEA,6BACA,4BACA,2BAIA,qBACA,IAMA,GALA,qCACA,uCACA,6BACA,+BACA,6BACA,qBACA,iEACA,gEACA,SACA,aACAC,YACAC,YACAC,4BACAC,4BACAC,8BACAC,2BAEA,6BACA,CACA,0EACA,8DACA,SACA,aACAL,YACAC,YACAC,gBACAC,yBACAC,8BACAC,2BAEA,yBAEA,iBACA,gBACA,yBACA,SACAf,eACA,sCAGA,2BACA,IACA,0BACA,SACA,wBACA,iEACA,iEACA,SACAlC,aACA4C,YACAC,YACAC,4BACAC,4BACAC,8BACAC,+BAEA,CACA,0EACA,+DACA,SACAjD,aACA4C,YACAC,YACAC,gBACAC,yBACAC,8BACAC,2BAGA3E,KACA,QACA,KACA,uDACA,8CACA,QACAK,iCACAoE,aAEA,IAEA,uBACA,mBAEA,gBACA,UAEA,sCACAb,0BACAgB,KACAC,IACAC,IACAzE,iCACAoE,aAEAzB,IACA+B,UACA,kCACA,4BACA,OAAA/D,GAAA,gBACA,YAAAE,GAAA,gBAgBA,GAbA,MACAA,kCAGA,iBACAJ,YACAC,WACAC,SACAE,UACAC,OACAF,yBAGA,qCACA,qDACA,kCACA8D,qEAKA,4BACA,oBACA,sGAEA,SAGA,0CACA,2BAEA,SAIA,8BAEA,SAeA,GAbAC,2BACAhF,qCAGA4E,YACAN,eACAC,eACAC,+BACAC,yBAGAI,iBACA7B,KACA,kBACA,UACA,MAGA,SACA,UACA,MAKA,oBAGA8B,oBAKA,CACA,cAOA,GANA,MACAA,YACAzE,kCACAoE,cAGA,IAEA,YADA,2CAIA,sCAKA,GAJA,sBACAQ,gBACAA,iCAEA,wBACA,mBACAL,+CAEAA,wCAIA,GADAE,gDACA,8BACA,oDACA,qCACAG,iBAGA,4BACA,SACA,KAEA,eACA,qBACAC,iDACA,gDACA,uEAGA,oBACA,kCAEA,CACAC,iDACA,gDACA,6FAOA,GAHA,kCACA,8BACA,0CACA,qCACA,MAGAvB,sCACAA,+CACAA,+DACA,SACAA,eACA,gCAGA,6BACA,IACA,0BACA,4BACA,uCACA,gCAEA,SAAAwB,6BAEA,GACAC,cACAC,4DACAC,SACA,oDAEAtJ,QAGA,cACA,IAAAuJ,GAAA,YACA,mBAEAA,cACA,cACA,kDAEA,mCAGAC,cACA,WACAC,iBACA,+BAEAA,sCACA,oCAIA,iFACA,gCACA,6HAEA,qCACA,sGAEA,SACA9B,eACA,mCAGA,0BACA,IACA,8BACA,8BACA,oBACA+B,iBAIA,sBACA,yCACA/B,+CAEA,SAAAwB,YAAAQ,kBACA,GACAP,cACAC,0DACAC,SACA,oDAEAtJ,QAGA,YAEA,wCACA2H,+CAEA,SACAtC,SAEA,GACA+D,cACAC,wCACArJ,QA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","file":"js/app.0e8d30f4.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","<template>\n  <div id=\"app\">\n    <button @click=\"isTestnet = !isTestnet\">\n      USING {{ isTestnet ? 'TESTNET' : 'MAINNET' }}. Click to use {{ isTestnet ? 'MAINNET' : 'TESTNET' }}\n    </button>\n    <button @click=\"chain === 'flux' ? chain = 'bitcoin' : (chain = 'flux', unsignedTx.fee = 0)\">\n      USING {{ chain === 'flux' ? 'Flux' : 'Bitcoin' }}. Click to use {{ chain === 'flux' ? 'Bitcoin' : 'Flux' }}\n    </button>\n    <h1>Welcome to FLUX, BTC multisig Tool</h1>\n    <hr>\n    <h3>\n      Keypair generation tool\n    </h3>\n    <p>\n      This tool generates a Public Key and corresponding private key that can later be used for MultiSignature address.\n    </p>\n    <div>\n      <button @click=\"generateKeypair\">\n        Generate Keypair\n      </button>\n      <br>\n      Public Key: {{ keypair.publickey }}\n      <br>\n      Private Key: {{ keypair.privatekey }}\n    </div>\n    <hr>\n    <h3>\n      Multi Signature address generation tool\n    </h3>\n    <p>\n      This tool generates a Multisignature address from given set of Public Keys and required signatures needed.\n    </p>\n    <div>\n      <div\n        v-for=\"n in inputs\"\n        :key=\"n\"\n      >\n        Public Key {{ n }}: <input\n          v-model=\"publickeys[n-1]\"\n          class=\"pubkey\"\n        >\n      </div>\n      <br>\n      <button @click=\"addPubKey\">\n        Add Public Key Input\n      </button>\n      <br><br>\n      <div>\n        Signatures needed: <input v-model=\"reqsig\">\n        <br><br>\n        <button @click=\"generateMultisig\">\n          Generate Multisig Address\n        </button>\n        <br><br>\n        Address: {{ multisig.address }}\n        <br>\n        Redeem Script: {{ multisig.redeemScript }}\n      </div>\n    </div>\n    <hr>\n    <div>\n      <h3>\n        Coin Control\n      </h3>\n      <p>\n        This tool lets you select which outputs you would like to spend\n      </p>\n      <br>\n      Address: <input\n        v-model=\"coincontrol.address\"\n        class=\"pubkey\"\n      >\n      <p>\n        <button @click=\"fetchUtxoSet\">\n          View Spendable Transactions\n        </button>\n        <br><br>\n        {{ coincontrol.errorMsg }}\n      </p>\n      <div v-if=\"coincontrol.show\">\n        <table\n          id=\"coincontroltable\"\n          class=\"center\"\n        >\n          <thead>\n            <tr>\n              <th />\n              <th />\n              <th>Confirmations</th>\n              <th>Txid</th>\n              <th>Vout</th>\n              <th>Amount</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              v-for=\"(item, index) in coincontrol.getrows\"\n              :key=\"index\"\n            >\n              <td>{{ (coincontrol.currentPage - 1) * 10 + index }}</td>\n              <td>\n                <input\n                  v-model=\"coincontrol.selected[(coincontrol.currentPage - 1) * 10 + index]\"\n                  aria-labelledby=\"coinControl\"\n                  type=\"checkbox\"\n                  class=\"checkbox\"\n                  @change=\"checkboxClicked($event.target.checked, (coincontrol.currentPage - 1) * 10 + index);\"\n                >\n              </td>\n              <td>{{ item.confirmations }}</td>\n              <td>{{ item.txid }}</td>\n              <td>{{ item.vout }}</td>\n              <td>{{ item.amount }}</td>\n            </tr>\n          </tbody>\n        </table>\n        <br>\n        <div class=\"pagination\">\n          <div\n            v-for=\"(i) in coincontrol.numpages\"\n            :key=\"i\"\n            class=\"number\"\n            :class=\"[i == coincontrol.currentPage ? 'active' : '']\"\n            @click=\"change_page(i)\"\n          >\n            {{ i }}\n          </div>\n        </div>\n      </div>\n    </div>\n    <hr>\n    <div>\n      <h3>\n        Build Unsigned Transaction\n      </h3>\n      <p>\n        This tool helps you build an unsigned transaction.\n      </p>\n      <p />\n      <button @click=\"isTitan = !isTitan; avoidFluxNodeAmounts = isTitan;\">\n        {{ isTitan ? 'USING Titan Features.' : '' }} Click to toggle titan features\n      </button>\n      <br>\n      <div :style=\"{display: isTitan ? 'initial' : 'none'}\">\n        <label><input\n          id=\"checkbox\"\n          v-model=\"avoidFluxNodeAmounts\"\n          aria-labelledby=\"avoindFluxNodeAmounts\"\n          type=\"checkbox\"\n          :disabled=\"fillHotWalletWithRewards || fillHotWalletFromDesposit || createCollateralTx\"\n        >Avoid Flux Node Collateral Amounts</label>\n        <br>\n        <label><input\n          id=\"checkbox\"\n          v-model=\"sendAllFlux\"\n          aria-labelledby=\"sendAll\"\n          type=\"checkbox\"\n          :disabled=\"multipleTxes || createCollateralTx\"\n        >Select All Flux (Ignores the Amount - Max 2000 inputs)</label>\n        <br>\n        <label><input\n          id=\"checkbox\"\n          v-model=\"fillHotWalletWithRewards\"\n          aria-labelledby=\"fillHotWithRewards\"\n          type=\"checkbox\"\n          @change=\"fillHotWalletWithRewardsCheckboxClicked($event.target.checked);\"\n        >Fill Hot Wallet From Collateral Rewards</label>\n        <br>\n        <label><input\n          id=\"checkbox\"\n          v-model=\"fillHotWalletFromDesposit\"\n          aria-labelledby=\"fillHotWalletFromDesposit\"\n          type=\"checkbox\"\n          @change=\"fillHotWalletFromDepositCheckboxClicked($event.target.checked);\"\n        >Fill Hot Wallet From Deposit Address</label>\n        <br>\n        <label><input\n          id=\"checkbox\"\n          v-model=\"createCollateralTx\"\n          aria-labelledby=\"createCollateralTx\"\n          type=\"checkbox\"\n          @change=\"createCollateralTxCheckboxClicked($event.target.checked);\"\n        >Create Titan Collateral Transaction</label>\n      </div>\n\n      <div\n        v-show=\"coincontrol.selectedValueSats\"\n        style=\"color:green;\"\n      >\n        Coin Control Active: <b>{{ coincontrol.selectedValueAmount }}</b>\n      </div>\n      <br>\n      My Address: <input\n        v-model=\"unsignedTx.myAddress\"\n        class=\"pubkey\"\n        :disabled=\"createCollateralTx || fillHotWalletFromDesposit || fillHotWalletWithRewards\"\n      >\n      <br>\n      Receiver Address: <input\n        v-model=\"unsignedTx.receiver\"\n        class=\"pubkey\"\n        :disabled=\"createCollateralTx || fillHotWalletFromDesposit || fillHotWalletWithRewards\"\n      >\n      <br>\n      Amount to Send: <input\n        v-model=\"unsignedTx.amount\"\n        class=\"pubkey\"\n        :disabled=\"sendAllFlux || createCollateralTx\"\n      >\n      <div v-if=\"chain === 'bitcoin'\">\n        <br>\n        Fee to Send: <input\n          v-model=\"unsignedTx.fee\"\n          class=\"pubkey\"\n        >\n      </div>\n      <br>\n      Message to Send: <input\n        v-model=\"unsignedTx.message\"\n        class=\"pubkey\"\n      >\n      <div :style=\"{display: isTitan ? 'initial' : 'none'}\">\n        <br>\n        <label>Generate Multiple Transactions (Can't use with send All):<input\n          id=\"checkbox\"\n          v-model=\"multipleTxes\"\n          aria-labelledby=\"multiTxes\"\n          type=\"checkbox\"\n          @change=\"generateMultiTxesCheckboxClicked($event.target.checked);\"\n        ></label>\n        <br>\n        <br>\n        <label> How many transactions to build\n          <input\n            v-model=\"nTxLoopCount\"\n            type=\"number\"\n            min=\"1\"\n            max=\"30\"\n            value=\"5\"\n          ></label>\n      </div>\n      <br>\n      <br>\n      <button @click=\"buildUnsignedRawTx\">\n        Build!\n      </button>\n      <br><br>\n      <div\n        v-for=\"(item, index) in txinfoList\"\n        :key=\"item.id\"\n      >\n        Information {{ index }}: {{ item }}\n      </div>\n      <br><br>\n      <div\n        v-for=\"(item, index) in unsignedTxList\"\n        :key=\"item.id\"\n      >\n        Raw Transaction {{ index }}: {{ item.hex }}\n      </div>\n    </div>\n    <hr>\n    <div style=\"white-space: pre-line;\">\n      <h3>\n        Decode Transaction\n      </h3>\n      <p>\n        This tool displays information about a transaction to the user\n      </p>\n      Transaction to decode: <textarea\n        v-model=\"decodeRawHex\"\n        aria-labelledby=\"decodeRawHex\"\n        class=\"pubkey\"\n      />\n      <br>\n      <br>\n      <button @click=\"decodeRawTransaction\">\n        Decode!\n      </button>\n      <br>\n      {{ decodedInfoString }}\n      <br>\n    </div>\n    <hr>\n    <div>\n      <h3>\n        Sign Transaction\n      </h3>\n      <p>\n        This tool signs a transaction that is being performed from a multisig address with your private key. Fee is 0 satoshis.\n      </p>\n      My Private Key: <input\n        v-model=\"signedTx.privatekey\"\n        class=\"pubkey\"\n      >\n      <br>\n      My Multisig address {{ chain === 'flux' ? 'Redeem Script' : 'Witness Script' }} <textarea\n        v-model=\"signedTx.redeemScript\"\n        :aria-labelledby=\"chain === 'flux' ? 'redeemScript' : 'withnessScript'\"\n        class=\"pubkey\"\n      />\n      <br>\n      Transaction to sign: <textarea\n        v-model=\"signedTx.rawtx\"\n        aria-labelledby=\"transactionToSign\"\n        class=\"pubkey\"\n      />\n      <br>\n      <br>\n      <button @click=\"signTransaction\">\n        Sign!\n      </button>\n      <br><br>\n      Raw Transaction: {{ signedTx.hex }}\n    </div>\n    <hr>\n    <div>\n      <h3>\n        Finalise Transaction\n      </h3>\n      <p>\n        This tool finalises a transaction that was previously signed.\n      </p>\n      Transaction to finalise: <textarea\n        v-model=\"finalisedTx.rawtx\"\n        aria-labelledby=\"transactionToFinalise\"\n        class=\"pubkey\"\n      />\n      <br>\n      <br>\n      <button @click=\"finaliseTransaction\">\n        Finalise!\n      </button>\n      <br><br>\n      Finalised Transaction: {{ finalisedTx.hex }}\n    </div>\n    <hr>\n    <div>\n      <h3>\n        Submit Transaction\n      </h3>\n      <p>\n        This tool submits a transaction that was previously finalized.\n      </p>\n      Transaction to submit: <textarea\n        v-model=\"submitedTx.rawtx\"\n        aria-labelledby=\"transactionToSubmit\"\n        class=\"pubkey\"\n      />\n      <br>\n      <br>\n      <button @click=\"submitTransaction\">\n        Submit!\n      </button>\n      <br><br>\n      Submit Transaction: {{ submitedTx.hex }}\n    </div>\n  </div>\n</template>\n\n<script>\n\nconst bitgotx = require('bitgo-utxo-lib');\nconst axios = require('axios');\n\nlet utxosUsedInCurrentTransaction = {};\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      keypair: {\n        publickey: '',\n        privatekey: '',\n      },\n      multisig: {\n        address: '',\n        redeemScript: '',\n      },\n      txinfo: '',\n      txinfoList: [],\n      publickeys: [],\n      inputs: 1,\n      reqsig: 1,\n      nTxLoopCount: 5,\n      unsignedTx: {\n        myAddress: '',\n        receiver: '',\n        amount: 0,\n        fee: 0,\n        message: '',\n        hex: '',\n      },\n      unsignedTxList: [],\n      signedTx: {\n        rawtx: '',\n        privatekey: '',\n        redeemScript: '',\n        hex: '',\n      },\n      finalisedTx: {\n        rawtx: '',\n        hex: '',\n      },\n      submitedTx: {\n        rawtx: '',\n        hex: '',\n      },\n      coincontrol: {\n        address: '',\n        utxos: [],\n        selected: [],\n        errorMsg: '',\n        currentPage: 1,\n        elementsPerPage: 10,\n        getrows: 0,\n        numpages: 0,\n        show: false,\n        selectedValueSats: 0,\n        selectedValueAmount: 0,\n      },\n      avoidFluxNodeAmounts: false,\n      sendAllFlux: false,\n      isTestnet: false,\n      chain: 'flux',\n      isTitan: false,\n      multipleTxes: false,\n      createCollateralTx: false,\n      fillHotWalletFromDesposit: false,\n      fillHotWalletWithRewards: false,\n      decodeRawHex: '',\n      decodedInfo: {\n        inputs: {\n          balanceSpent: 0,\n          count: 0,\n        },\n        outputs: [],\n      },\n      decodedInfoString: '',\n      mainnetExplorer: 'https://explorer.runonflux.io',\n      testnetExplorer: 'https://testnet.runonflux.io',\n      bitcoinBlockbook: 'https://blockbookbitcoin.app.runonflux.io',\n      testnetBitcoinBlockbook: 'https://blockbookbitcointestnet.app.runonflux.io',\n    };\n  },\n  methods: {\n    getNetwork() {\n      let network = bitgotx.networks.zelcash;\n      if (this.chain === 'bitcoin' && !this.isTestnet) {\n        network = bitgotx.networks.bitcoin;\n      } else if (this.chain === 'bitcoin' && this.isTestnet) {\n        network = bitgotx.networks.testnet;\n      } else if (this.chain === 'flux' && !this.isTestnet) {\n        network = bitgotx.networks.zelcash;\n      } else if (this.chain === 'flux' && this.isTestnet) {\n        network = bitgotx.networks.fluxtestnet;\n      }\n      return network;\n    },\n    generateKeypair() {\n      const network = this.getNetwork();\n      const keyPair = bitgotx.ECPair.makeRandom({ network });\n      const pubKey = keyPair.getPublicKeyBuffer().toString('hex');\n\n      this.keypair.publickey = pubKey;\n      this.keypair.privatekey = keyPair.toWIF();\n    },\n    generateMultisig() {\n      try {\n        const filteredPK = this.publickeys.filter((el) => el != null && el !== '' && el !== undefined);\n\n        const pubKeysBuffer = filteredPK.map((hex) => Buffer.from(hex, 'hex'));\n\n        if (this.chain === 'flux') {\n          const redeemScript = bitgotx.script.multisig.output.encode(Number(this.reqsig), pubKeysBuffer);\n          const redeemScriptHex = redeemScript.toString('hex');\n          const scriptPubKey = bitgotx.script.scriptHash.output.encode(bitgotx.crypto.hash160(redeemScript));\n\n          const network = this.getNetwork();\n          const address = bitgotx.address.fromOutputScript(scriptPubKey, network);\n          this.multisig.address = address;\n          this.multisig.redeemScript = redeemScriptHex;\n        } else {\n          const witnessScript = bitgotx.script.multisig.output.encode(Number(this.reqsig), pubKeysBuffer);\n          const witnessScriptHex = witnessScript.toString('hex');\n          const scriptPubKey = bitgotx.script.witnessScriptHash.output.encode(\n            bitgotx.crypto.sha256(witnessScript),\n          );\n          const network = this.getNetwork();\n          const address = bitgotx.address.fromOutputScript(scriptPubKey, network);\n          this.multisig.address = address;\n          this.multisig.redeemScript = witnessScriptHex;\n        }\n      } catch (e) {\n        console.log(e);\n        this.multisig.address = e.message;\n        this.multisig.redeemScript = e.message;\n      }\n    },\n    addPubKey() {\n      this.inputs += 1;\n    },\n    num_pages() {\n      this.coincontrol.numpages = Math.ceil(this.coincontrol.utxos.length / this.coincontrol.elementsPerPage);\n    },\n    get_rows() {\n      const start = (this.coincontrol.currentPage - 1) * this.coincontrol.elementsPerPage;\n      const end = start + this.coincontrol.elementsPerPage;\n\n      this.coincontrol.getrows = this.coincontrol.utxos.slice(start, end);\n    },\n    change_page(page) {\n      this.coincontrol.currentPage = page;\n      this.get_rows();\n    },\n    checkboxClicked(cb, index) {\n      if (cb) {\n        this.coincontrol.selectedValueSats += this.coincontrol.utxos[index].satoshis;\n      } else {\n        this.coincontrol.selectedValueSats -= this.coincontrol.utxos[index].satoshis;\n      }\n      this.coincontrol.selectedValueAmount = Number(this.coincontrol.selectedValueSats * 1e-8).toFixed(8);\n    },\n    createCollateralTxCheckboxClicked(cb) {\n      if (cb) {\n        this.avoidFluxNodeAmounts = false;\n        this.fillHotWalletFromDesposit = false;\n        this.fillHotWalletWithRewards = false;\n        this.sendAllFlux = false;\n        this.unsignedTx.myAddress = 't3a6HnypgaJf5xHMA8PrnfJBR6PpTithbeC';\n        this.unsignedTx.receiver = 't3c4EfxLoXXSRZCRnPRF3RpjPi9mBzF5yoJ';\n        this.unsignedTx.amount = 40000;\n      } else {\n        this.unsignedTx.myAddress = '';\n        this.unsignedTx.receiver = '';\n        this.unsignedTx.amount = 0;\n      }\n    },\n    generateMultiTxesCheckboxClicked(cb) {\n      if (cb) {\n        this.sendAllFlux = false;\n      }\n    },\n    fillHotWalletFromDepositCheckboxClicked(cb) {\n      if (cb) {\n        this.avoidFluxNodeAmounts = false;\n        this.createCollateralTx = false;\n        this.fillHotWalletWithRewards = false;\n        this.unsignedTx.myAddress = 't3a6HnypgaJf5xHMA8PrnfJBR6PpTithbeC';\n        this.unsignedTx.receiver = 't1S9USrJGCkLZgmA1Cv7P1fe5qraz2oqT5e';\n        this.unsignedTx.amount = 0;\n      } else {\n        this.unsignedTx.myAddress = '';\n        this.unsignedTx.receiver = '';\n        this.unsignedTx.amount = 0;\n      }\n    },\n    fillHotWalletWithRewardsCheckboxClicked(cb) {\n      if (cb) {\n        this.avoidFluxNodeAmounts = true;\n        this.createCollateralTx = false;\n        this.fillHotWalletFromDesposit = false;\n        this.unsignedTx.myAddress = 't3c4EfxLoXXSRZCRnPRF3RpjPi9mBzF5yoJ';\n        this.unsignedTx.receiver = 't1S9USrJGCkLZgmA1Cv7P1fe5qraz2oqT5e';\n        this.unsignedTx.amount = 0;\n      } else {\n        this.unsignedTx.myAddress = '';\n        this.unsignedTx.receiver = '';\n        this.unsignedTx.amount = 0;\n      }\n    },\n\n    async fetchUtxoSet() {\n      try {\n        this.coincontrol.selectedValueSats = 0;\n        this.coincontrol.selectedValueAmount = 0;\n        this.coincontrol.errorMsg = '';\n        this.coincontrol.currentPage = 1;\n        this.coincontrol.selected = [];\n        if (this.chain === 'flux') {\n          const explorer = this.isTestnet ? this.testnetExplorer : this.mainnetExplorer;\n          const utx = await axios.get(`${explorer}/api/addr/${this.coincontrol.address}/utxo`);\n          const fetchedUtxos = utx.data;\n          const utxos = fetchedUtxos.map((x) => ({\n            txid: x.txid,\n            vout: x.vout,\n            scriptPubKey: x.scriptPubKey,\n            satoshis: Number(x.satoshis),\n            confirmations: x.confirmations,\n            coinbase: x.coinbase || false,\n          }));\n          this.coincontrol.utxos = utxos;\n        } else {\n          const blockbook = this.isTestnet ? this.testnetBitcoinBlockbook : this.bitcoinBlockbook;\n          const utx = await axios.get(`${blockbook}/api/v2/utxo/${this.coincontrol.address}`);\n          const fetchedUtxos = utx.data;\n          const utxos = fetchedUtxos.map((x) => ({\n            txid: x.txid,\n            vout: x.vout,\n            scriptPubKey: '', // that is fine, not needed\n            satoshis: Number(x.value),\n            confirmations: x.confirmations,\n            coinbase: x.coinbase || false,\n          }));\n          this.coincontrol.utxos = utxos;\n        }\n        this.num_pages();\n        this.get_rows();\n        this.coincontrol.show = true;\n      } catch (e) {\n        console.log(e);\n        this.coincontrol.errorMsg = e.message;\n      }\n    },\n    async buildUnsignedRawTx() {\n      try {\n        const network = this.getNetwork();\n        let utxos = [];\n        if (this.chain === 'flux') {\n          const explorer = this.isTestnet ? this.testnetExplorer : this.mainnetExplorer;\n          const utx = await axios.get(`${explorer}/api/addr/${this.unsignedTx.myAddress}/utxo`);\n          const fetchedUtxos = utx.data;\n          utxos = fetchedUtxos.map((x) => ({\n            txid: x.txid,\n            vout: x.vout,\n            scriptPubKey: x.scriptPubKey,\n            satoshis: Number(x.satoshis),\n            confirmations: x.confirmations,\n            coinbase: x.coinbase || false,\n          }));\n        } else {\n          const blockbook = this.isTestnet ? this.testnetBitcoinBlockbook : this.bitcoinBlockbook;\n          const utx = await axios.get(`${blockbook}/api/v2/utxo/${this.unsignedTx.myAddress}`);\n          const fetchedUtxos = utx.data;\n          utxos = fetchedUtxos.map((x) => ({\n            txid: x.txid,\n            vout: x.vout,\n            scriptPubKey: '', // that is fine, not needed\n            satoshis: Number(x.value),\n            confirmations: x.confirmations,\n            coinbase: x.coinbase || false,\n          }));\n        }\n        utxosUsedInCurrentTransaction = {};\n        let satoshisSoFar = 0;\n        let history = [];\n        const satoshisToSend = Math.round(Number(this.unsignedTx.amount) * 1e8);\n        const satoshisfeesToSend = Math.round(Number(this.unsignedTx.fee) * 1e8);\n        let recipients = [{\n          address: this.unsignedTx.receiver,\n          satoshis: satoshisToSend,\n        }];\n        let count = 0;\n\n        this.unsignedTxList = [];\n        this.txinfoList = [];\n\n        const selectedCoins = new Set();\n        const usedUtxos = new Set();\n\n        for (let loop = 0; loop < this.nTxLoopCount; loop += 1) {\n          console.log('TX Loop:', loop);\n          history = [];\n          satoshisSoFar = 0;\n          recipients = [{\n            address: this.unsignedTx.receiver,\n            satoshis: satoshisToSend,\n          }];\n          count = 0;\n          selectedCoins.clear();\n          const addressFrom = this.unsignedTx.myAddress;\n          const addressTo = this.unsignedTx.receiver;\n          const { amount } = this.unsignedTx;\n          let { message } = this.unsignedTx;\n\n          // if this isn't the first tx, update the message\n          if (loop > 0) {\n            message = this.updateTitanNodeMessage(message);\n          }\n\n          this.unsignedTx = {\n            myAddress: addressFrom,\n            receiver: addressTo,\n            amount,\n            message,\n            hex: '',\n            fee: this.unsignedTx.fee,\n          };\n\n          if (this.coincontrol.selectedValueSats > 0) {\n            for (let j = 0; j < this.coincontrol.selected.length; j += 1) {\n              if (this.coincontrol.selected[j] === true) {\n                selectedCoins.add(this.coincontrol.utxos[j].txid + this.coincontrol.utxos[j].vout);\n              }\n            }\n          }\n\n          for (let i = 0; i < utxos.length; i += 1) {\n            if (utxos[i].height !== 0) {\n              if (this.avoidFluxNodeAmounts && (+utxos[i].satoshis === 4000000000000 || +utxos[i].satoshis === 1250000000000 || +utxos[i].satoshis === 100000000000)) {\n                // eslint-disable-next-line no-continue\n                continue;\n              }\n\n              if (this.coincontrol.selectedValueSats > 0) {\n                if (!selectedCoins.has(utxos[i].txid + utxos[i].vout)) {\n                  // eslint-disable-next-line no-continue\n                  continue;\n                }\n              }\n\n              if (usedUtxos.has(utxos[i].txid + utxos[i].vout)) {\n                // eslint-disable-next-line no-continue\n                continue;\n              } else {\n                usedUtxos.add(utxos[i].txid + utxos[i].vout);\n                utxosUsedInCurrentTransaction[utxos[i].txid + utxos[i].vout] = utxos[i].satoshis;\n              }\n\n              history = history.concat({\n                txid: utxos[i].txid,\n                vout: utxos[i].vout,\n                scriptPubKey: utxos[i].scriptPubKey,\n                satoshis: utxos[i].satoshis,\n              });\n\n              satoshisSoFar += utxos[i].satoshis;\n              count += 1;\n              if (this.sendAllFlux) {\n                if (count >= 2000) {\n                  break;\n                }\n                // eslint-disable-next-line no-continue\n                continue;\n              } else if (satoshisSoFar >= satoshisToSend + satoshisfeesToSend) {\n                break;\n              }\n            }\n          }\n\n          if (this.sendAllFlux) {\n            // Update the recipient to the full flux amount\n            // Overrides the amount that was put in the Amount to Send textbox\n            recipients[0].satoshis = satoshisSoFar;\n\n            // We don't have any change when sendAllFlux is true\n\n            // All txs have fee 0\n          } else {\n            const refundSatoshis = satoshisSoFar - satoshisToSend - satoshisfeesToSend;\n            if (refundSatoshis > 0) {\n              recipients = recipients.concat({\n                address: this.unsignedTx.myAddress,\n                satoshis: refundSatoshis,\n              });\n            }\n            if (refundSatoshis < 0) {\n              this.unsignedTx.hex = 'Insufficient amount';\n              return;\n            }\n          }\n          const txb = new bitgotx.TransactionBuilder(network, satoshisfeesToSend);\n          if (this.chain === 'flux') {\n            txb.setVersion(4);\n            txb.setVersionGroupId(0x892F2085);\n          }\n          if (this.chain === 'bitcoin') {\n            const RBFsequence = 0xffffffff - 2;\n            history.forEach((x) => txb.addInput(x.txid, x.vout, RBFsequence));\n          } else {\n            history.forEach((x) => txb.addInput(x.txid, x.vout));\n          }\n\n          recipients.forEach((x) => txb.addOutput(x.address, x.satoshis));\n          if (this.unsignedTx.message !== '') {\n            const data = Buffer.from(this.unsignedTx.message, 'utf8');\n            const dataScript = bitgotx.script.nullData.output.encode(data);\n            txb.addOutput(dataScript, 0);\n          }\n\n          const tx = txb.buildIncomplete();\n          let destination = '';\n          let change = '';\n\n          if ('outs' in tx) {\n            if (tx.outs.length >= 1) {\n              destination = bitgotx.address.fromOutputScript(tx.outs[0].script, network);\n              const amountSending = Number(tx.outs[0].value * 1e-8).toFixed(8);\n              this.txinfo = `Sending ${amountSending} ${this.chain === 'flux' ? 'FLUX' : 'BTC'} to ${destination}`;\n            }\n\n            if (tx.outs.length >= 2) {\n              if (tx.outs[1].script[0] === 0x6a) {\n                // This is the message outpoint as it starts with OP_RETURN\n              } else {\n                change = bitgotx.address.fromOutputScript(tx.outs[1].script, network);\n                const amountChange = Number(tx.outs[1].value * 1e-8).toFixed(8);\n                this.txinfo += ` and sending back as change ${amountChange} ${this.chain === 'flux' ? 'FLUX' : 'BTC'} to ${change}`;\n              }\n            }\n          }\n          this.txinfoList.push(this.txinfo);\n          this.unsignedTx.hex = tx.toHex();\n          this.unsignedTxList.push(this.unsignedTx);\n          if (this.sendAllFlux || !this.multipleTxes) {\n            break;\n          }\n        }\n        console.log('All transactions built');\n        console.log(this.unsignedTxList.map((x) => x.hex));\n        console.log(JSON.stringify(this.unsignedTxList.map((x) => x.hex)));\n      } catch (e) {\n        console.log(e);\n        this.unsignedTx.hex = e.message;\n      }\n    },\n    async decodeRawTransaction() {\n      try {\n        this.decodedInfoString = '';\n        this.decodedInfo.outputs = [];\n        this.decodedInfo.inputs.balanceSpent = 0;\n        this.decodedInfo.inputs.count = 0;\n\n        const data = { hexstring: this.decodeRawHex };\n\n        const config = {\n          method: 'post',\n          url: 'https://api.runonflux.io/daemon/decoderawtransaction/',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          data,\n        };\n\n        const response = await axios(config);\n        const { vin } = response.data.data;\n        const out = response.data.data.vout;\n\n        vin.forEach((input) => {\n          if ('value' in input) {\n            this.decodedInfo.inputs.balanceSpent += input.value || 0;\n          }\n          this.decodedInfo.inputs.count += 1;\n        });\n\n        out.forEach((output) => {\n          const item = {};\n          item.amount = output.value;\n          if ('addresses' in output.scriptPubKey) {\n            // eslint-disable-next-line prefer-destructuring\n            item.address = output.scriptPubKey.addresses[0];\n            this.decodedInfo.outputs.push(item);\n          }\n        });\n\n        this.decodedInfoString = `\\nSpending ${this.decodedInfo.inputs.count} input(s).\\n`;\n        if (this.decodedInfo.inputs.value) {\n          this.decodedInfoString = `\\nSpending ${this.decodedInfo.inputs.value} ${this.chain === 'flux' ? 'FLUX' : 'BTC'} in the input(s).\\n`;\n        }\n        this.decodedInfo.outputs.forEach((output) => {\n          this.decodedInfoString += `Sending ${output.amount} ${this.chain === 'flux' ? 'FLUX' : 'BTC'} to ${output.address}\\n`;\n        });\n      } catch (e) {\n        console.log(e);\n        this.decodedInfoString = e.message;\n      }\n    },\n    async submitTransaction() {\n      try {\n        const txhex = this.submitedTx.rawtx;\n        let txs = [this.submitedTx.rawtx];\n        if (txhex.startsWith('[')) {\n          txs = JSON.parse(txhex);\n          // multiple txs\n        }\n\n        const promises = txs.map((tx, index) => {\n          if (this.chain === 'flux' && !this.isTestnet) {\n            console.log('Submitting tx:', index + 1, '/', txs.length);\n\n            const data = { hexstring: tx, allowhighfees: true };\n            const config = {\n              method: 'post',\n              url: 'https://api.runonflux.io/daemon/sendrawtransaction/',\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n              },\n              data,\n            };\n\n            return axios(config);\n          }\n          if (this.chain === 'flux' && this.isTestnet) {\n            console.log('Submitting tx:', index + 1, '/', txs.length);\n\n            const data = {\n              rawtx: tx,\n            };\n            const config = {\n              method: 'post',\n              url: `${this.testnetExplorer}/api/tx/send`,\n              data,\n            };\n\n            return axios(config);\n          }\n          console.log('Submitting tx:', index + 1, '/', txs.length);\n\n          const data = tx;\n          const config = {\n            method: 'post',\n            url: this.isTestnet ? `${this.testnetBitcoinBlockbook}/api/v2/sendtx/` : `${this.bitcoinBlockbook}/api/v2/sendtx/`,\n            data,\n          };\n\n          return axios(config);\n        });\n\n        const responses = await Promise.all(promises);\n        const submittedTxs = responses.map((response) => response.data);\n        if (submittedTxs.length === 1) {\n          console.log(submittedTxs[0]);\n          // eslint-disable-next-line prefer-destructuring\n          this.submitedTx.hex = submittedTxs[0];\n        } else {\n          console.log(JSON.stringify(submittedTxs));\n          this.submitedTx.hex = 'See console for multiple transactions';\n        }\n        console.log('All transactions submitted');\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    async signTransaction() {\n      try {\n        const network = this.getNetwork();\n        const hashType = bitgotx.Transaction.SIGHASH_ALL;\n        const txhex = this.signedTx.rawtx;\n        let txs = [this.signedTx.rawtx];\n        if (txhex.startsWith('[')) {\n          txs = JSON.parse(txhex);\n          // multiple txs\n        }\n        const signedTxs = [];\n        for (let t = 0; t < txs.length; t += 1) {\n          console.log('Signing tx:', t + 1, '/', txs.length);\n          const keyPair = bitgotx.ECPair.fromWIF(this.signedTx.privatekey, network);\n          const txb = bitgotx.TransactionBuilder.fromTransaction(bitgotx.Transaction.fromHex(txs[t], network), network);\n          let quickLoad = true;\n          // eslint-disable-next-line no-unused-vars\n          for (let i = 0; i < txb.inputs.length; i += 1) {\n            const hash = this.getValueHexBuffer(txb.tx.ins[i].hash.toString('hex'));\n            const { index } = txb.tx.ins[i];\n            let value;\n\n            // Do a quick lookup in the utxos dictionary\n            if (hash + index in utxosUsedInCurrentTransaction) {\n              value = Math.round(Number(utxosUsedInCurrentTransaction[hash + index]));\n            } else if (quickLoad) {\n            // Only do it once\n              quickLoad = false;\n\n              // Fetch the first tx, so we can determine the address the inputs are coming from\n              let addr;\n              let tx;\n              /* eslint-disable no-await-in-loop */\n              if (this.chain === 'flux') {\n                const exp = this.isTestnet ? this.testnetExplorer : this.mainnetExplorer;\n                tx = await axios.get(`${exp}/api/tx/${hash}`);\n                // eslint-disable-next-line prefer-destructuring\n                addr = tx.data.vout[index].scriptPubKey.addresses[0];\n              } else {\n                const blockbook = this.isTestnet ? this.testnetBitcoinBlockbook : this.bitcoinBlockbook;\n                tx = await axios.get(`${blockbook}/api/tx/${hash}`);\n                // eslint-disable-next-line prefer-destructuring\n                addr = tx.data.vout[index].scriptPubKey.addresses[0];\n              }\n\n              // Get all utxos for that address with a single call\n              let utxos = [];\n              if (this.chain === 'flux') {\n                const exp = this.isTestnet ? this.testnetExplorer : this.mainnetExplorer;\n                const utx = await axios.get(`${exp}/api/addr/${addr}/utxo`);\n                const fetchedUtxos = utx.data;\n                utxos = fetchedUtxos.map((x) => ({\n                  txid: x.txid,\n                  vout: x.vout,\n                  scriptPubKey: x.scriptPubKey,\n                  satoshis: Number(x.satoshis),\n                  confirmations: x.confirmations,\n                  coinbase: x.coinbase || false,\n                }));\n              } else {\n                const blockbook = this.isTestnet ? this.testnetBitcoinBlockbook : this.bitcoinBlockbook;\n                const utx = await axios.get(`${blockbook}/api/v2/utxo/${addr}`);\n                const fetchedUtxos = utx.data;\n                utxos = fetchedUtxos.map((x) => ({\n                  txid: x.txid,\n                  vout: x.vout,\n                  scriptPubKey: '', // that is fine, not needed\n                  satoshis: Number(x.value),\n                  confirmations: x.confirmations,\n                  coinbase: x.coinbase || false,\n                }));\n              }\n\n              // Load utxo into dictionary\n              /* eslint-disable no-loop-func */\n              utxos.forEach((element) => {\n                utxosUsedInCurrentTransaction[element.txid + element.vout] = element.satoshis;\n              });\n\n              // Check the utxo dictionary again for the txid + index\n              if (hash + index in utxosUsedInCurrentTransaction) {\n                value = Math.round(Number(utxosUsedInCurrentTransaction[hash + index]));\n              } else {\n              // If not found use the value received when fetching the singleton txhash above.\n                value = Math.round(Number(tx.data.vout[index].value) * 1e8);\n              }\n            } else {\n            // If quick searches don't work, default to fetching tx one at a time.\n              let tx;\n              if (this.chain === 'flux') {\n                const exp = this.isTestnet ? this.testnetExplorer : this.mainnetExplorer;\n                tx = await axios.get(`${exp}/api/tx/${hash}`);\n              } else {\n                const blockbook = this.isTestnet ? this.testnetBitcoinBlockbook : this.bitcoinBlockbook;\n                tx = await axios.get(`${blockbook}/api/tx/${hash}`);\n              }\n              value = Math.round(Number(tx.data.vout[index].value) * 1e8);\n            }\n\n            txb.sign(i, keyPair, this.chain !== 'bitcoin' ? Buffer.from(this.signedTx.redeemScript, 'hex') : '', hashType, value, this.chain === 'bitcoin' ? Buffer.from(this.signedTx.redeemScript, 'hex') : '');\n          }\n          const tx = txb.buildIncomplete();\n          signedTxs.push(tx.toHex());\n        }\n        if (signedTxs.length === 1) {\n          console.log(signedTxs[0]);\n          // eslint-disable-next-line prefer-destructuring\n          this.signedTx.hex = signedTxs[0];\n        } else {\n          console.log(JSON.stringify(signedTxs));\n          this.signedTx.hex = 'See console for multiple transactions';\n        }\n        console.log('All transactions signed');\n      } catch (e) {\n        console.log(e);\n        this.signedTx.hex = e.message;\n      }\n    },\n    finaliseTransaction() {\n      try {\n        const network = this.getNetwork();\n        const txhex = this.finalisedTx.rawtx;\n        let txs = [this.finalisedTx.rawtx];\n        if (txhex.startsWith('[')) {\n          txs = JSON.parse(txhex);\n          // multiple txs\n        }\n        const finalizedTxs = [];\n        for (let t = 0; t < txs.length; t += 1) {\n          console.log('Finalizing tx:', t + 1, '/', txs.length);\n          const txb = bitgotx.TransactionBuilder.fromTransaction(bitgotx.Transaction.fromHex(txs[t], network), network);\n          const tx = txb.build();\n          finalizedTxs.push(tx.toHex());\n        }\n        if (finalizedTxs.length === 1) {\n          console.log(finalizedTxs[0]);\n          // eslint-disable-next-line prefer-destructuring\n          this.finalisedTx.hex = finalizedTxs[0];\n        } else {\n          console.log(JSON.stringify(finalizedTxs));\n          this.finalisedTx.hex = 'See console for multiple tx finalization';\n        }\n        console.log('All transactions finalized');\n      } catch (e) {\n        console.log(e);\n        this.finalisedTx.hex = e.message;\n      }\n    },\n    getValueHexBuffer(hex) {\n      const buf = Buffer.from(hex, 'hex').reverse();\n      return buf.toString('hex');\n    },\n    updateTitanNodeMessage(message) {\n      // Example Titan Node 15\n      if (message.includes('Titan Node')) {\n        const text = message;\n        const getPart = text.replace(/[^\\d.]/g, ''); // returns '15'\n        const num = parseInt(getPart, 10); // returns 15\n        const newVal = num + 1; // returns 16\n        const reg = new RegExp(num); // create dynamic regexp\n        const newstring = text.replace(reg, newVal); // returns Titan Node 16\n        return newstring;\n      }\n      return '';\n    },\n  },\n};\n</script>\n\n<style scoped>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n.pubkey {\n  width: 80%;\n}\n.pubkey {\n  width: 80%;\n}\n\n.number {\n  display: inline-block;\n  padding: 4px 10px;\n  color: #fff;\n  border-radius: 4px;\n  background: #44475c;\n  margin: 0px 5px;\n  cursor: pointer;\n}\n\ntable tbody tr:nth-child(2n) td {\n  background: #d4d8f9;\n}\n\ntable th {\n  text-transform: uppercase;\n  text-align: left;\n  background: #44475c;\n  color: #fff;\n  cursor: pointer;\n  padding: 8px;\n  min-width: 30px;\n}\n\ntable td {\n  text-align: left;\n  padding: 8px;\n  border-right: 2px solid #7d82a8;\n}\ntable td:last-child {\n  border-right: none;\n}\n\ntable {\n  font-family: \"Open Sans\", sans-serif;\n  width: 750px;\n  border-collapse: collapse;\n  border: 3px solid #44475c;\n  margin: 10px 10px 0 10px;\n}\n\ntable.center {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.popover {\n    white-space: pre-line;\n}\n\n</style>\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('button',{on:{\"click\":function($event){_vm.isTestnet = !_vm.isTestnet}}},[_vm._v(\" USING \"+_vm._s(_vm.isTestnet ? 'TESTNET' : 'MAINNET')+\". Click to use \"+_vm._s(_vm.isTestnet ? 'MAINNET' : 'TESTNET')+\" \")]),_c('button',{on:{\"click\":function($event){_vm.chain === 'flux' ? _vm.chain = 'bitcoin' : (_vm.chain = 'flux', _vm.unsignedTx.fee = 0)}}},[_vm._v(\" USING \"+_vm._s(_vm.chain === 'flux' ? 'Flux' : 'Bitcoin')+\". Click to use \"+_vm._s(_vm.chain === 'flux' ? 'Bitcoin' : 'Flux')+\" \")]),_c('h1',[_vm._v(\"Welcome to FLUX, BTC multisig Tool\")]),_c('hr'),_c('h3',[_vm._v(\" Keypair generation tool \")]),_c('p',[_vm._v(\" This tool generates a Public Key and corresponding private key that can later be used for MultiSignature address. \")]),_c('div',[_c('button',{on:{\"click\":_vm.generateKeypair}},[_vm._v(\" Generate Keypair \")]),_c('br'),_vm._v(\" Public Key: \"+_vm._s(_vm.keypair.publickey)+\" \"),_c('br'),_vm._v(\" Private Key: \"+_vm._s(_vm.keypair.privatekey)+\" \")]),_c('hr'),_c('h3',[_vm._v(\" Multi Signature address generation tool \")]),_c('p',[_vm._v(\" This tool generates a Multisignature address from given set of Public Keys and required signatures needed. \")]),_c('div',[_vm._l((_vm.inputs),function(n){return _c('div',{key:n},[_vm._v(\" Public Key \"+_vm._s(n)+\": \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.publickeys[n-1]),expression:\"publickeys[n-1]\"}],staticClass:\"pubkey\",domProps:{\"value\":(_vm.publickeys[n-1])},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.publickeys, n-1, $event.target.value)}}})])}),_c('br'),_c('button',{on:{\"click\":_vm.addPubKey}},[_vm._v(\" Add Public Key Input \")]),_c('br'),_c('br'),_c('div',[_vm._v(\" Signatures needed: \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.reqsig),expression:\"reqsig\"}],domProps:{\"value\":(_vm.reqsig)},on:{\"input\":function($event){if($event.target.composing)return;_vm.reqsig=$event.target.value}}}),_c('br'),_c('br'),_c('button',{on:{\"click\":_vm.generateMultisig}},[_vm._v(\" Generate Multisig Address \")]),_c('br'),_c('br'),_vm._v(\" Address: \"+_vm._s(_vm.multisig.address)+\" \"),_c('br'),_vm._v(\" Redeem Script: \"+_vm._s(_vm.multisig.redeemScript)+\" \")])],2),_c('hr'),_c('div',[_c('h3',[_vm._v(\" Coin Control \")]),_c('p',[_vm._v(\" This tool lets you select which outputs you would like to spend \")]),_c('br'),_vm._v(\" Address: \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.coincontrol.address),expression:\"coincontrol.address\"}],staticClass:\"pubkey\",domProps:{\"value\":(_vm.coincontrol.address)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.coincontrol, \"address\", $event.target.value)}}}),_c('p',[_c('button',{on:{\"click\":_vm.fetchUtxoSet}},[_vm._v(\" View Spendable Transactions \")]),_c('br'),_c('br'),_vm._v(\" \"+_vm._s(_vm.coincontrol.errorMsg)+\" \")]),(_vm.coincontrol.show)?_c('div',[_c('table',{staticClass:\"center\",attrs:{\"id\":\"coincontroltable\"}},[_vm._m(0),_c('tbody',_vm._l((_vm.coincontrol.getrows),function(item,index){return _c('tr',{key:index},[_c('td',[_vm._v(_vm._s((_vm.coincontrol.currentPage - 1) * 10 + index))]),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.coincontrol.selected[(_vm.coincontrol.currentPage - 1) * 10 + index]),expression:\"coincontrol.selected[(coincontrol.currentPage - 1) * 10 + index]\"}],staticClass:\"checkbox\",attrs:{\"aria-labelledby\":\"coinControl\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.coincontrol.selected[(_vm.coincontrol.currentPage - 1) * 10 + index])?_vm._i(_vm.coincontrol.selected[(_vm.coincontrol.currentPage - 1) * 10 + index],null)>-1:(_vm.coincontrol.selected[(_vm.coincontrol.currentPage - 1) * 10 + index])},on:{\"change\":[function($event){var $$a=_vm.coincontrol.selected[(_vm.coincontrol.currentPage - 1) * 10 + index],$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.$set(_vm.coincontrol.selected, (_vm.coincontrol.currentPage - 1) * 10 + index, $$a.concat([$$v])))}else{$$i>-1&&(_vm.$set(_vm.coincontrol.selected, (_vm.coincontrol.currentPage - 1) * 10 + index, $$a.slice(0,$$i).concat($$a.slice($$i+1))))}}else{_vm.$set(_vm.coincontrol.selected, (_vm.coincontrol.currentPage - 1) * 10 + index, $$c)}},function($event){_vm.checkboxClicked($event.target.checked, (_vm.coincontrol.currentPage - 1) * 10 + index);}]}})]),_c('td',[_vm._v(_vm._s(item.confirmations))]),_c('td',[_vm._v(_vm._s(item.txid))]),_c('td',[_vm._v(_vm._s(item.vout))]),_c('td',[_vm._v(_vm._s(item.amount))])])}),0)]),_c('br'),_c('div',{staticClass:\"pagination\"},_vm._l((_vm.coincontrol.numpages),function(i){return _c('div',{key:i,staticClass:\"number\",class:[i == _vm.coincontrol.currentPage ? 'active' : ''],on:{\"click\":function($event){return _vm.change_page(i)}}},[_vm._v(\" \"+_vm._s(i)+\" \")])}),0)]):_vm._e()]),_c('hr'),_c('div',[_c('h3',[_vm._v(\" Build Unsigned Transaction \")]),_c('p',[_vm._v(\" This tool helps you build an unsigned transaction. \")]),_c('p'),_c('button',{on:{\"click\":function($event){_vm.isTitan = !_vm.isTitan; _vm.avoidFluxNodeAmounts = _vm.isTitan;}}},[_vm._v(\" \"+_vm._s(_vm.isTitan ? 'USING Titan Features.' : '')+\" Click to toggle titan features \")]),_c('br'),_c('div',{style:({display: _vm.isTitan ? 'initial' : 'none'})},[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.avoidFluxNodeAmounts),expression:\"avoidFluxNodeAmounts\"}],attrs:{\"id\":\"checkbox\",\"aria-labelledby\":\"avoindFluxNodeAmounts\",\"type\":\"checkbox\",\"disabled\":_vm.fillHotWalletWithRewards || _vm.fillHotWalletFromDesposit || _vm.createCollateralTx},domProps:{\"checked\":Array.isArray(_vm.avoidFluxNodeAmounts)?_vm._i(_vm.avoidFluxNodeAmounts,null)>-1:(_vm.avoidFluxNodeAmounts)},on:{\"change\":function($event){var $$a=_vm.avoidFluxNodeAmounts,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.avoidFluxNodeAmounts=$$a.concat([$$v]))}else{$$i>-1&&(_vm.avoidFluxNodeAmounts=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.avoidFluxNodeAmounts=$$c}}}}),_vm._v(\"Avoid Flux Node Collateral Amounts\")]),_c('br'),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.sendAllFlux),expression:\"sendAllFlux\"}],attrs:{\"id\":\"checkbox\",\"aria-labelledby\":\"sendAll\",\"type\":\"checkbox\",\"disabled\":_vm.multipleTxes || _vm.createCollateralTx},domProps:{\"checked\":Array.isArray(_vm.sendAllFlux)?_vm._i(_vm.sendAllFlux,null)>-1:(_vm.sendAllFlux)},on:{\"change\":function($event){var $$a=_vm.sendAllFlux,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.sendAllFlux=$$a.concat([$$v]))}else{$$i>-1&&(_vm.sendAllFlux=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.sendAllFlux=$$c}}}}),_vm._v(\"Select All Flux (Ignores the Amount - Max 2000 inputs)\")]),_c('br'),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.fillHotWalletWithRewards),expression:\"fillHotWalletWithRewards\"}],attrs:{\"id\":\"checkbox\",\"aria-labelledby\":\"fillHotWithRewards\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.fillHotWalletWithRewards)?_vm._i(_vm.fillHotWalletWithRewards,null)>-1:(_vm.fillHotWalletWithRewards)},on:{\"change\":[function($event){var $$a=_vm.fillHotWalletWithRewards,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.fillHotWalletWithRewards=$$a.concat([$$v]))}else{$$i>-1&&(_vm.fillHotWalletWithRewards=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.fillHotWalletWithRewards=$$c}},function($event){return _vm.fillHotWalletWithRewardsCheckboxClicked($event.target.checked);}]}}),_vm._v(\"Fill Hot Wallet From Collateral Rewards\")]),_c('br'),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.fillHotWalletFromDesposit),expression:\"fillHotWalletFromDesposit\"}],attrs:{\"id\":\"checkbox\",\"aria-labelledby\":\"fillHotWalletFromDesposit\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.fillHotWalletFromDesposit)?_vm._i(_vm.fillHotWalletFromDesposit,null)>-1:(_vm.fillHotWalletFromDesposit)},on:{\"change\":[function($event){var $$a=_vm.fillHotWalletFromDesposit,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.fillHotWalletFromDesposit=$$a.concat([$$v]))}else{$$i>-1&&(_vm.fillHotWalletFromDesposit=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.fillHotWalletFromDesposit=$$c}},function($event){return _vm.fillHotWalletFromDepositCheckboxClicked($event.target.checked);}]}}),_vm._v(\"Fill Hot Wallet From Deposit Address\")]),_c('br'),_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.createCollateralTx),expression:\"createCollateralTx\"}],attrs:{\"id\":\"checkbox\",\"aria-labelledby\":\"createCollateralTx\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.createCollateralTx)?_vm._i(_vm.createCollateralTx,null)>-1:(_vm.createCollateralTx)},on:{\"change\":[function($event){var $$a=_vm.createCollateralTx,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.createCollateralTx=$$a.concat([$$v]))}else{$$i>-1&&(_vm.createCollateralTx=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.createCollateralTx=$$c}},function($event){return _vm.createCollateralTxCheckboxClicked($event.target.checked);}]}}),_vm._v(\"Create Titan Collateral Transaction\")])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.coincontrol.selectedValueSats),expression:\"coincontrol.selectedValueSats\"}],staticStyle:{\"color\":\"green\"}},[_vm._v(\" Coin Control Active: \"),_c('b',[_vm._v(_vm._s(_vm.coincontrol.selectedValueAmount))])]),_c('br'),_vm._v(\" My Address: \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.unsignedTx.myAddress),expression:\"unsignedTx.myAddress\"}],staticClass:\"pubkey\",attrs:{\"disabled\":_vm.createCollateralTx || _vm.fillHotWalletFromDesposit || _vm.fillHotWalletWithRewards},domProps:{\"value\":(_vm.unsignedTx.myAddress)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.unsignedTx, \"myAddress\", $event.target.value)}}}),_c('br'),_vm._v(\" Receiver Address: \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.unsignedTx.receiver),expression:\"unsignedTx.receiver\"}],staticClass:\"pubkey\",attrs:{\"disabled\":_vm.createCollateralTx || _vm.fillHotWalletFromDesposit || _vm.fillHotWalletWithRewards},domProps:{\"value\":(_vm.unsignedTx.receiver)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.unsignedTx, \"receiver\", $event.target.value)}}}),_c('br'),_vm._v(\" Amount to Send: \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.unsignedTx.amount),expression:\"unsignedTx.amount\"}],staticClass:\"pubkey\",attrs:{\"disabled\":_vm.sendAllFlux || _vm.createCollateralTx},domProps:{\"value\":(_vm.unsignedTx.amount)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.unsignedTx, \"amount\", $event.target.value)}}}),(_vm.chain === 'bitcoin')?_c('div',[_c('br'),_vm._v(\" Fee to Send: \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.unsignedTx.fee),expression:\"unsignedTx.fee\"}],staticClass:\"pubkey\",domProps:{\"value\":(_vm.unsignedTx.fee)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.unsignedTx, \"fee\", $event.target.value)}}})]):_vm._e(),_c('br'),_vm._v(\" Message to Send: \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.unsignedTx.message),expression:\"unsignedTx.message\"}],staticClass:\"pubkey\",domProps:{\"value\":(_vm.unsignedTx.message)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.unsignedTx, \"message\", $event.target.value)}}}),_c('div',{style:({display: _vm.isTitan ? 'initial' : 'none'})},[_c('br'),_c('label',[_vm._v(\"Generate Multiple Transactions (Can't use with send All):\"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.multipleTxes),expression:\"multipleTxes\"}],attrs:{\"id\":\"checkbox\",\"aria-labelledby\":\"multiTxes\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.multipleTxes)?_vm._i(_vm.multipleTxes,null)>-1:(_vm.multipleTxes)},on:{\"change\":[function($event){var $$a=_vm.multipleTxes,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.multipleTxes=$$a.concat([$$v]))}else{$$i>-1&&(_vm.multipleTxes=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.multipleTxes=$$c}},function($event){return _vm.generateMultiTxesCheckboxClicked($event.target.checked);}]}})]),_c('br'),_c('br'),_c('label',[_vm._v(\" How many transactions to build \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.nTxLoopCount),expression:\"nTxLoopCount\"}],attrs:{\"type\":\"number\",\"min\":\"1\",\"max\":\"30\",\"value\":\"5\"},domProps:{\"value\":(_vm.nTxLoopCount)},on:{\"input\":function($event){if($event.target.composing)return;_vm.nTxLoopCount=$event.target.value}}})])]),_c('br'),_c('br'),_c('button',{on:{\"click\":_vm.buildUnsignedRawTx}},[_vm._v(\" Build! \")]),_c('br'),_c('br'),_vm._l((_vm.txinfoList),function(item,index){return _c('div',{key:item.id},[_vm._v(\" Information \"+_vm._s(index)+\": \"+_vm._s(item)+\" \")])}),_c('br'),_c('br'),_vm._l((_vm.unsignedTxList),function(item,index){return _c('div',{key:item.id},[_vm._v(\" Raw Transaction \"+_vm._s(index)+\": \"+_vm._s(item.hex)+\" \")])})],2),_c('hr'),_c('div',{staticStyle:{\"white-space\":\"pre-line\"}},[_c('h3',[_vm._v(\" Decode Transaction \")]),_c('p',[_vm._v(\" This tool displays information about a transaction to the user \")]),_vm._v(\" Transaction to decode: \"),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.decodeRawHex),expression:\"decodeRawHex\"}],staticClass:\"pubkey\",attrs:{\"aria-labelledby\":\"decodeRawHex\"},domProps:{\"value\":(_vm.decodeRawHex)},on:{\"input\":function($event){if($event.target.composing)return;_vm.decodeRawHex=$event.target.value}}}),_vm._v(\" \"),_c('br'),_c('br'),_c('button',{on:{\"click\":_vm.decodeRawTransaction}},[_vm._v(\" Decode! \")]),_c('br'),_vm._v(\" \"+_vm._s(_vm.decodedInfoString)+\" \"),_c('br')]),_c('hr'),_c('div',[_c('h3',[_vm._v(\" Sign Transaction \")]),_c('p',[_vm._v(\" This tool signs a transaction that is being performed from a multisig address with your private key. Fee is 0 satoshis. \")]),_vm._v(\" My Private Key: \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.signedTx.privatekey),expression:\"signedTx.privatekey\"}],staticClass:\"pubkey\",domProps:{\"value\":(_vm.signedTx.privatekey)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.signedTx, \"privatekey\", $event.target.value)}}}),_c('br'),_vm._v(\" My Multisig address \"+_vm._s(_vm.chain === 'flux' ? 'Redeem Script' : 'Witness Script')+\" \"),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.signedTx.redeemScript),expression:\"signedTx.redeemScript\"}],staticClass:\"pubkey\",attrs:{\"aria-labelledby\":_vm.chain === 'flux' ? 'redeemScript' : 'withnessScript'},domProps:{\"value\":(_vm.signedTx.redeemScript)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.signedTx, \"redeemScript\", $event.target.value)}}}),_vm._v(\" \"),_c('br'),_vm._v(\" Transaction to sign: \"),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.signedTx.rawtx),expression:\"signedTx.rawtx\"}],staticClass:\"pubkey\",attrs:{\"aria-labelledby\":\"transactionToSign\"},domProps:{\"value\":(_vm.signedTx.rawtx)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.signedTx, \"rawtx\", $event.target.value)}}}),_vm._v(\" \"),_c('br'),_c('br'),_c('button',{on:{\"click\":_vm.signTransaction}},[_vm._v(\" Sign! \")]),_c('br'),_c('br'),_vm._v(\" Raw Transaction: \"+_vm._s(_vm.signedTx.hex)+\" \")]),_c('hr'),_c('div',[_c('h3',[_vm._v(\" Finalise Transaction \")]),_c('p',[_vm._v(\" This tool finalises a transaction that was previously signed. \")]),_vm._v(\" Transaction to finalise: \"),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.finalisedTx.rawtx),expression:\"finalisedTx.rawtx\"}],staticClass:\"pubkey\",attrs:{\"aria-labelledby\":\"transactionToFinalise\"},domProps:{\"value\":(_vm.finalisedTx.rawtx)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.finalisedTx, \"rawtx\", $event.target.value)}}}),_vm._v(\" \"),_c('br'),_c('br'),_c('button',{on:{\"click\":_vm.finaliseTransaction}},[_vm._v(\" Finalise! \")]),_c('br'),_c('br'),_vm._v(\" Finalised Transaction: \"+_vm._s(_vm.finalisedTx.hex)+\" \")]),_c('hr'),_c('div',[_c('h3',[_vm._v(\" Submit Transaction \")]),_c('p',[_vm._v(\" This tool submits a transaction that was previously finalized. \")]),_vm._v(\" Transaction to submit: \"),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.submitedTx.rawtx),expression:\"submitedTx.rawtx\"}],staticClass:\"pubkey\",attrs:{\"aria-labelledby\":\"transactionToSubmit\"},domProps:{\"value\":(_vm.submitedTx.rawtx)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.submitedTx, \"rawtx\", $event.target.value)}}}),_vm._v(\" \"),_c('br'),_c('br'),_c('button',{on:{\"click\":_vm.submitTransaction}},[_vm._v(\" Submit! \")]),_c('br'),_c('br'),_vm._v(\" Submit Transaction: \"+_vm._s(_vm.submitedTx.hex)+\" \")])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('thead',[_c('tr',[_c('th'),_c('th'),_c('th',[_vm._v(\"Confirmations\")]),_c('th',[_vm._v(\"Txid\")]),_c('th',[_vm._v(\"Vout\")]),_c('th',[_vm._v(\"Amount\")])])])\n}]\n\nexport { render, staticRenderFns }","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=6afae629&scoped=true&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=6afae629&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6afae629\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport App from './App.vue';\n\nVue.config.productionTip = false;\n\nnew Vue({\n  render: (h) => h(App),\n}).$mount('#app');\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=6afae629&prod&scoped=true&lang=css&\""],"sourceRoot":""}